/*
void draw_line(int x0, int y0, int x1, int y1, unsigned char R, unsigned char G, unsigned char B) {

  ///*
  printf("\ndrawing line\n"); ////////
  
  double slope = (double) (y1 - y0) / (x1 - x0);
  
    if (slope < 1 && slope > -1) {
    
      if (x1 < x0) {
        printf("FLIP\n");
        draw_line(x1, y1, x0, y0, R, G, B);
        return;
      }

      double y = y0 + 0.5;
      while (x0 <= x1) {
        printf("%d %lf\n", x0, y); //////////
        double shade1 = y - ((int) (y - 0.5)) - 0.5;
        double shade2 = ((int) (y + 0.5)) - y + 0.5;
        drawPixel(R * shade1, G * shade1, B * shade1, x0, (int) (y + 0.5));
        drawPixel(R * shade2, G * shade2, B * shade2, x0, (int) (y - 0.5));
        x0++;
        y += slope;
      }
      return;   
    }
  
  if (y1 < y0) {
    draw_line(x1, y1, x0, y0, R, G, B);
    return;
  }
  
  double x = x0 + 0.5;
  while (y0 <= y1) {
    double shade1 = x - ((int) (x - 0.5)) - 0.5;
    double shade2 = ((int) (x + 0.5)) - x + 0.5;
    drawPixel(R * shade1, G * shade1, B * shade1, (int) (x + 0.5), y0);
    drawPixel(R * shade2, G * shade2, B * shade2, (int) (x - 0.5), y0);
    y0++;
    x += 1/slope;
  }
  //*/
  
  /*
  if (x1 == x0 && y1 == y0) {
    drawPixel(R, G, B, x0, y0);
    return;
  }
  
  if (x1 < x0) {
    draw_line(x1, y1, x0, y0, R, G, B);
    return;
  }
  
  if (x1 == x0) {
    if (y1 > y0) {
      while (y0 <= y1) {
        drawPixel(R, G, B, x0, y0);
        y0++;
      }
      return;
    }
    while (y0 >= y1) {
      drawPixel(R, G, B, x0, y0);
      y0--;
    }
    return;
  }
  
  double slope = (double) (y1 - y0) / (x1 - x0);
  
  if (y1 > y0) {
  
    if (slope < 1) {
    
      // Octant 1
      double y_error = 0;
      while (x0 <= x1) {
        if (y_error > .5) {
          y0++;
          y_error--;
        }
        drawPixel(R, G, B, x0, y0);
        x0++;
        y_error += slope;
      }
      return;   
    }
    
    // Octant 2
    double x_error = 0;
    while (y0 <= y1) {
      if (x_error > .5) {
        x0++;
        x_error--;
      }
      drawPixel(R, G, B, x0, y0);
      y0++;
      x_error += 1/slope;
    }
    return;
  }
  
  if (slope > -1) {
  
    // Octant 8
    double y_error = 0;
    while (x0 <= x1) {
      if (y_error < -.5) {
        y0--;
        y_error++;
      }
      drawPixel(R, G, B, x0, y0);
      x0++;
      y_error += slope;
    }
    return;   
  }
  
  // Octant 7
  double x_error = 0;
  while (y0 >= y1) {
    if (x_error < .5) {
      x0++;
      x_error++;
    }
    drawPixel(R, G, B, x0, y0);
    y0--;
    x_error += 1/slope;
  }
  //
}
*/
